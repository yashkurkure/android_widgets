<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.yash.examples.launchactivitywidget">

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.LaunchActivityWidget">

        <!--launchMode for the activity that the widget is launched should be singleTop-->
        <activity
            android:name=".MainActivity"
            android:exported="true"
            android:launchMode="singleTop">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>


        <!--First, we need to declare the widget in the manifest-->
        <!--
        Notes:
            android:name here specifies the AppWidgetProvider class used by the widget. In this app's case the
            name of the AppWidgetProvider is ExampleAppWidgetProvider.

        See file
            ExampleAppWidgetProvider.java
        -->
        <receiver
            android:name="ExampleAppWidgetProvider"
            android:exported="false">

            <intent-filter>
                <!--The action element's name attribute specifies that our BroadCast receiver accepts the ACTION_APPWIDGET_UPDATE broadcast-->
                <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
            </intent-filter>

            <!--
            Notes:
                The meta-data specifies the AppWidgetProviderInfo xml resource using the android:resource attribute
                The name attribute helps identify the data as AppWidgetProviderInfo, in this case we need to set it to android.appwidget.provider
            -->
            <meta-data android:name = "android.appwidget.provider"
                android:resource="@xml/example_appwidget_info" />

        </receiver>



    </application>

</manifest>